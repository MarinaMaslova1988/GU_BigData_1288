"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
 Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""

# def my_div (a,b):
#     try:
#         return a / b
#     except ZeroDivisionError:
#         print("Делить на 0 нельзя!")
#
# x_1 = int(input("Введите первое число (делимое): "))
# x_2 = int(input("Введите второе число (делитель): "))
# print(my_div(x_1, x_2))

"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
"""
# def my_info (name, surname, year_of_birth, city, email, number):
#     print(f"Информация о пользователе: Имя - {name}, Фамилия - {surname}, Год рождения - {year_of_birth},"
#           f"Город проживания - {city}, email - {email}, Номер телефона - {number}")
#
# name = input("Введите имя: ")
# surname = input("Введите фамилию: ")
# year_of_birth = int(input("Введите год рождения: "))
# city = input("Введите город проживания: ")
# email = input("Введите email: ")
# number = input("Введите номер телефона: ")
#
# my_info(surname=surname, name=name, year_of_birth=year_of_birth, city=city, email=email, number=number)

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.
"""

# def my_sum():
#     a = input("Введите первое число: ")
#     b = input("Введите второе число: ")
#     c = input("Введите третье число: ")
#     if a.isdigit() == False or b.isdigit() == False or c.isdigit() == False:
#         print("Некорректно введенные данные. Попробуйте еще раз!")
#     else:
#         my_min = min([int(a), int(b), int(c)])
#         return (int(a)+int(b)+int(c)-int(my_min))
#
# print(f'Сумма двух наибольших аргументов равна: {my_sum()}')

"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""

# Первый способ (с помощью оператора **)
# my_func = lambda x, y: x**y
#
# a = int(input("Введите положительное число: "))
# b = int(input("Введите отрицательное число: "))
# print(my_func(a, b))

# Второй способ (с помощью цикла)
# def my_func(x,y):
#     if (x<=0 or y>=0):
#         print("Некорректно введенные данные. Попробуйте еще раз!")
#     else:
#         i = 1
#         c = 1
#         while i <= abs(y):
#             c = c*(1/x)
#             i+= 1  # счетчик
#         return c
#
# a = int(input("Введите положительное число: "))
# b = int(input("Введите отрицательное число: "))
# print(my_func(a, b))


"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, 
выполнение программы завершается. Если специальный символ введен после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""

# def my_list_sum():
#     my_sum_res = 0
#     metka = False
#
#     while metka == False:
#         numbers = input('Введите цифры через пробел или символ "*" для завершения программы: ').split()
#         my_sum = 0
#         for i in numbers:
#                 if i == '*':
#                     metka = True
#                     break
#                 else:
#                     my_sum += int(i)
#         my_sum_res = my_sum_res + my_sum
#         print(my_sum_res)
#     return my_sum_res
#
# print(f"Сумма цифр составляет {my_list_sum()}")

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, 
но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""

# def int_func(word):
#     if list(word)[0].istitle() == True:
#         print("Введенное слово уже написано с заглавной буквы!")
#     elif list(word)[0].isdigit() == True:
#         print("Первый символ слова - цифра! Попробуйте ввести данные еще раз!")
#     else:
#         return word.title()

# # Ввод одного слова
# word = input("Введите слово c маленькой буквы: ")
# print(int_func(word))
#
# # Ввод нескольких слов
# my_list = input('Введите слова с маленькой буквы: ').split()
# my_list_new = []
#
# for el in my_list:
#     my_list_new.append(int_func(el))
#
# print(my_list_new)



